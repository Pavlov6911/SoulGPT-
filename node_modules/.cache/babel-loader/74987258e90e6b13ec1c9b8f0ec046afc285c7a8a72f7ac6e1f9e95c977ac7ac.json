{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState('light');useEffect(()=>{const savedTheme=localStorage.getItem('soul-theme');if(savedTheme){setTheme(savedTheme);}},[]);useEffect(()=>{const root=window.document.documentElement;if(theme==='dark'){root.classList.add('dark');}else{root.classList.remove('dark');}localStorage.setItem('soul-theme',theme);},[theme]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","useTheme","context","Error","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","root","window","document","documentElement","classList","add","remove","setItem","toggleTheme","prevTheme","Provider","value"],"sources":["D:/teste/saita na EMO/vantage-traders/SoulGPT-/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('soul-theme') as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n    localStorage.setItem('soul-theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBASzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,aAA2C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAQ,OAAO,CAAC,CAElDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAU,CAC9D,GAAIF,UAAU,CAAE,CACdD,QAAQ,CAACC,UAAU,CAAC,CACtB,CACF,CAAC,CAAE,EAAE,CAAC,CAENb,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,IAAI,CAAGC,MAAM,CAACC,QAAQ,CAACC,eAAe,CAC5C,GAAIR,KAAK,GAAK,MAAM,CAAE,CACpBK,IAAI,CAACI,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAC5B,CAAC,IAAM,CACLL,IAAI,CAACI,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CAC/B,CACAR,YAAY,CAACS,OAAO,CAAC,YAAY,CAAEZ,KAAK,CAAC,CAC3C,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAa,WAAW,CAAGA,CAAA,GAAM,CACxBZ,QAAQ,CAACa,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED,mBACEvB,IAAA,CAACC,YAAY,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,KAAK,CAAEa,WAAY,CAAE,CAAAd,QAAA,CAClDA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}